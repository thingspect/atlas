// Code generated by MockGen. DO NOT EDIT.
// Source: loraer.go

// Package lora is a generated GoMock package.
package lora

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLoraer is a mock of Loraer interface.
type MockLoraer struct {
	ctrl     *gomock.Controller
	recorder *MockLoraerMockRecorder
}

// MockLoraerMockRecorder is the mock recorder for MockLoraer.
type MockLoraerMockRecorder struct {
	mock *MockLoraer
}

// NewMockLoraer creates a new mock instance.
func NewMockLoraer(ctrl *gomock.Controller) *MockLoraer {
	mock := &MockLoraer{ctrl: ctrl}
	mock.recorder = &MockLoraerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoraer) EXPECT() *MockLoraerMockRecorder {
	return m.recorder
}

// CreateDevice mocks base method.
func (m *MockLoraer) CreateDevice(ctx context.Context, uniqID, appKey string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDevice", ctx, uniqID, appKey)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDevice indicates an expected call of CreateDevice.
func (mr *MockLoraerMockRecorder) CreateDevice(ctx, uniqID, appKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDevice", reflect.TypeOf((*MockLoraer)(nil).CreateDevice), ctx, uniqID, appKey)
}

// CreateGateway mocks base method.
func (m *MockLoraer) CreateGateway(ctx context.Context, uniqID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGateway", ctx, uniqID)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateGateway indicates an expected call of CreateGateway.
func (mr *MockLoraerMockRecorder) CreateGateway(ctx, uniqID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGateway", reflect.TypeOf((*MockLoraer)(nil).CreateGateway), ctx, uniqID)
}

// DeleteDevice mocks base method.
func (m *MockLoraer) DeleteDevice(ctx context.Context, uniqID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDevice", ctx, uniqID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDevice indicates an expected call of DeleteDevice.
func (mr *MockLoraerMockRecorder) DeleteDevice(ctx, uniqID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDevice", reflect.TypeOf((*MockLoraer)(nil).DeleteDevice), ctx, uniqID)
}

// DeleteGateway mocks base method.
func (m *MockLoraer) DeleteGateway(ctx context.Context, uniqID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteGateway", ctx, uniqID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteGateway indicates an expected call of DeleteGateway.
func (mr *MockLoraerMockRecorder) DeleteGateway(ctx, uniqID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteGateway", reflect.TypeOf((*MockLoraer)(nil).DeleteGateway), ctx, uniqID)
}
